[general]
# too directory
root:   lambda: "/mnt/hdb1/music"

# imports
os: import os
sh: import shutil
m:  import musync.custom

# weither or not to pretend
pretend:    lambda: False
force:      lambda: False
silent:     lambda: False
checkhash:  lambda meta: True
debug:      lambda: False
verbose:    lambda: False

# required lambda functions
rm:   lambda p: os.unlink(p.path)
add:  lambda src, dst: sh.move(src, dst)
hash: lambda target: m.md5sum(target)

# targetpath helper functions
# some of these only work in python2.6 or later
cfilter: lambda value: m.ue(m.lexer("/etc/musync.rules", value).lower())
cdir:    lambda meta: "{0}/{1:0>4d}-{2}".format(cfilter(meta.artist) or "no-artist", meta.year or 0, cfilter(meta.album) or "no-album")
cfile:   lambda meta: "{0:0>2d}-{1}.{2}".format(meta.track or 0, cfilter(meta.title) or "no-title", meta.ext)

# method for resolving where to put files.
targetpath: lambda p: os.path.join(cdir(p.meta), cfile(p.meta))

# which notice levels that are suppressed by 'silent' option
suppressed: lambda: ["notice", "warning"]

lockdb: lambda: os.path.join(root(), ".lock")

configurations: lambda: ["copy"]

[copy]
add: lambda src, dst: sh.copy(src, dst)

[move]
add: lambda src, dst: sh.move(src, dst)

[dap]
root:           lambda: "/home/udoprog/music"

x_to_ogg: lambda src, dst: m.system("/usr/bin/oggenc", src, "-o", dst, "-q", "8")

# transcoding
transcode: lambda src: m.case(src.ext, (('flac', 'wav'), ('ogg', x_to_ogg)))

silent:         lambda: False
